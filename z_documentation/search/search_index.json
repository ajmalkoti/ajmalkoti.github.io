{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"index.html","text":"Welcome to FDwave The pacakage is usefult for generating the seismic waves in different types of media. Characterstics of code: 2D finite difference time domain modelling over-staggered grid. It can simulate the seismic wave propagation in the elastic media. It uses very efficient vectorized finite difference operator. Content in package: FDWAVE: This directory contains all the programs & functions related to seismic modelling. SCRIPTS: This directory contains all the file containing commands used for the modelling. How to run the program Documentation is provided with the code as well as available online. Note: The code doesnt require any special installation. However, the subroutine FDwave_initialize should be included in the beginning of scripts. Further, to avoid any (remote) possibility of confilct with other subroutines while running other codes, If you are using this package then please cite following 1. Malkoti, A., Vedanti, N., Tiwari, R. K., 2018. An algorithm for fast elastic wave simulation using a vectorized finite difference operator. Computers & Geosciences 116, 23-31. 2. Lei Li, Jingqiang Tan, Dazhou Zhang, Ajay Malkoti, Ivan Abakumov & Yujiang Xie (2021). FDwave3D: a MATLAB solver for the 3D anisotropic wave equation using the finite-difference method. Computational Geosciences. Contact : Ajay Malkoti, Scientist, CSIR-National Geophysical Research Institute, Hyderabad, India-500007 Email : ajmalkoti@gmail.com","title":"Home"},{"location":"index.html#welcome-to-fdwave","text":"The pacakage is usefult for generating the seismic waves in different types of media.","title":"Welcome to FDwave"},{"location":"index.html#characterstics-of-code","text":"2D finite difference time domain modelling over-staggered grid. It can simulate the seismic wave propagation in the elastic media. It uses very efficient vectorized finite difference operator.","title":"Characterstics of code:"},{"location":"index.html#content-in-package","text":"FDWAVE: This directory contains all the programs & functions related to seismic modelling. SCRIPTS: This directory contains all the file containing commands used for the modelling. How to run the program Documentation is provided with the code as well as available online.","title":"Content in package:"},{"location":"index.html#note","text":"The code doesnt require any special installation. However, the subroutine FDwave_initialize should be included in the beginning of scripts. Further, to avoid any (remote) possibility of confilct with other subroutines while running other codes, If you are using this package then please cite following 1. Malkoti, A., Vedanti, N., Tiwari, R. K., 2018. An algorithm for fast elastic wave simulation using a vectorized finite difference operator. Computers & Geosciences 116, 23-31. 2. Lei Li, Jingqiang Tan, Dazhou Zhang, Ajay Malkoti, Ivan Abakumov & Yujiang Xie (2021). FDwave3D: a MATLAB solver for the 3D anisotropic wave equation using the finite-difference method. Computational Geosciences. Contact : Ajay Malkoti, Scientist, CSIR-National Geophysical Research Institute, Hyderabad, India-500007 Email : ajmalkoti@gmail.com","title":"Note:"},{"location":"about.html","text":"About","title":"About"},{"location":"about.html#about","text":"","title":"About"},{"location":"analysis.html","text":"Analysis Check for stability and dispersion","title":"Analysis"},{"location":"analysis.html#analysis","text":"Check for stability and dispersion","title":"Analysis"},{"location":"examples.html","text":"Examples","title":"Examples"},{"location":"examples.html#examples","text":"","title":"Examples"},{"location":"geometries.html","text":"Geometry","title":"Geometry"},{"location":"geometries.html#geometry","text":"","title":"Geometry"},{"location":"install.html","text":"Installation or initialization The code installation is very straightforward. Each time you want to use the code just add the following lines in the beginning of the code. First you provide the code path, e.g. cp = '../../FDwave' ; Then provide where you want to store your data wfp = pwd ; Then initialize the code FDwave_initialize ( 'CP' , cp , 'WFP' , wf_path , 'verbose' , 'n' ); Adding extra packages to the code The packages can be simply added to the directory","title":"Installation"},{"location":"install.html#installation-or-initialization","text":"The code installation is very straightforward. Each time you want to use the code just add the following lines in the beginning of the code. First you provide the code path, e.g. cp = '../../FDwave' ; Then provide where you want to store your data wfp = pwd ; Then initialize the code FDwave_initialize ( 'CP' , cp , 'WFP' , wf_path , 'verbose' , 'n' );","title":"Installation or initialization"},{"location":"install.html#adding-extra-packages-to-the-code","text":"The packages can be simply added to the directory","title":"Adding extra packages to the code"},{"location":"models.html","text":"Models Generating the models There are various inbuild capabilities to generate the models, viz. Simple layerd model Reading from segy model Drawing an arbitrary model Previously saved models Note: Different rheologies have different requirements therefore it is mandatory to provide the respective parameters. A concise list is provided following. Rheology Requirement scalar VP acoustic VP, RHO elastic VP, VS, RHO viscoacoustic VP, RHO, QP viscoelastic VP, VS, RHO, QP, QS Simple Layered Model The function \"FDWAVE_MODEL_LAYERS\" can create a model consisting of 'n' horizontal layers. Complete Syntax| FDwave_model_layers('WFP',path,'WAVE_TYPE',options,'DX',value,'DZ',value,'THICKNESS',value,'HV_RATIO',value,'VP',value,'VS',value,'RHO',value,'QP',value,'QS',value,'PlotON',option ) Description of parameters| Parameter Type Description WFP str Path to working folder RHEOLOGY/RHEO str Type of rheology used DX, DZ num Grid size in horizontal and vertical direction in meters HV_RATIO/HVR num To determine length along horizontal axis, X=HVR*Y. THICKNESS num,array Thickness of each layer in form of vector VP, VS num,array Velocity of P and S wave in form of vector RHO num,array Density of medium in form of vector QP, QS num,array Attenutation of P and S value in form of vector PlotON str 'y'/'n' for plotting VERBOSE str 'y'/'n' for verbose mode on. Example 1 : Homogenous layer model for different rheologies thick = 500 ; vp = 2500 ; vs = 2000 ; rho= 1900 ; qp = 80 ; qs = 50 ; FDwave_model_layers('WFP',wf_path,'Rheo','scalar','DX',5,'DZ',5,'THICKNESS',thick,... 'HV_RATIO',1,'VP',vp,'VS',vs,'RHO',rho,'PlotON','y'); FDwave_model_layers('WFP',wf_path,'Rheo','acoustic','DX',5,'DZ',5,'THICKNESS',thick,... 'HV_RATIO',1,'VP',vp,'VS',vs,'RHO',rho,'PlotON','y'); FDwave_model_layers('WFP',wf_path,'Rheo','Elastic','DX',5,'DZ',5,'THICKNESS',thick,... 'HV_RATIO',1,'VP',vp,'VS',vs,'RHO',rho,'PlotON','y'); FDwave_model_layers('WFP',wf_path,'Rheo','ViscoAcoustic','DX',5,'DZ',5,'THICKNESS',thick,... 'HV_RATIO',1,'VP',vp,'RHO',rho,'Qp',qp,'PlotON','y'); FDwave_model_layers('WFP',wf_path,'Rheo','ViscoElastic','DX',5,'DZ',5,'THICKNESS',thick,... 'HV_RATIO',1,'VP',vp,'VS',vs,'RHO',rho,'Qp',qp,'Qs',qs,'PlotON','y'); Example 2 : Layered model for different Rheologies. Nlayer=10; thick = round(100*rand(1,Nlayer),0); vp = 1500 + round(500*rand(1,Nlayer),0); vs = 1300 + round(300*rand(1,Nlayer),0); rho= 1100 + round(100*rand(1,Nlayer),0); qp = 80 + round(20*rand(1,Nlayer),0); qs = 50 + round(20*rand(1,Nlayer),0); FDwave_model_layers('WFP',wf_path,'Rheo','scalar','DX',5,'DZ',5,'THICKNESS',thick,... 'HV_RATIO',1,'VP',vp,'VS',vs,'RHO',rho,'PlotON','y'); FDwave_model_layers('WFP',wf_path,'Rheo','acoustic','DX',5,'DZ',5,'THICKNESS',thick,... 'HV_RATIO',1,'VP',vp,'VS',vs,'RHO',rho,'PlotON','y'); FDwave_model_layers('WFP',wf_path,'Rheo','Elastic','DX',5,'DZ',5,'THICKNESS',thick,... 'HV_RATIO',1,'VP',vp,'VS',vs,'RHO',rho,'PlotON','y'); FDwave_model_layers('WFP',wf_path,'Rheo','ViscoAcoustic','DX',5,'DZ',5,'THICKNESS',thick,... 'HV_RATIO',1,'VP',vp,'RHO',rho,'Qp',qp,'PlotON','y'); FDwave_model_layers('WFP',wf_path,'Rheo','ViscoElastic','DX',5,'DZ',5,'THICKNESS',thick,... 'HV_RATIO',1,'VP',vp,'VS',vs,'RHO',rho,'Qp',qp,'Qs',qs,'PlotON','y'); Example 3 : Internally saved model (Ref.KLR) FDwave_model_killari ( wf_path , 'el' ) Reading through the SEGY file The function \"FDwave_MODEL_READ_SEGY\" is used to load the models provided in segy file format. Syntax: model_read_segy ( 'WFP' , path , 'M_NAME' , name , 'Rheology' , options , 'CROP' , [ X1 , Z1 , X2 , Z2 ], 'GRID_SIZE_OLD' ,[ dx , dz ], 'GRID_SIZE_NEW' ,[ dx , dz ], 'PlotON' , option ) Parameter Type Description WFP str Path to working folder M_NAME str Name of the model (string) Rheology/Rheo str Options are- scalar, acoustic, elastic, viscoacoustic, viscoelastic CROP [float,float,float,float,] [X1,Z1, X2,Z2], Select the region using left upper (X1,Z1) and right lower (X2,Z2) coordinates GRID_SIZE_OLD [float,float,] [dx,dz] GRID_SIZE_NEW [float,float,] [dx,dz] PlotON str 'y'/'n' Example: Here we have used the Marmousi model which is provided in segyfile format on a fine scaled, i.e., dx=dz=1.5m. This functin also provides option to CROP and INTERPOLATE model to a coarse/finer model FDwave_model_readsegy ( 'WAVE_TYPE' , 'elastic' , 'CROP_MODEL' ,[ 7000 , 600 , 15000 , 4200 ], ... 'GRID_SIZE_OLD' ,[ 1.5 , 1.5 ], 'GRID_SIZE_NEW' ,[ 12.5 , 12.5 ], 'PlotON' , 'y' ) Building a model by inserting arbitrary shapes. This part is still in developement phase. This model primarily uses two commands: first is for initializing the model \"FDwave_model_build_init\", and the second is to insert the shapes \"FDwave_model_build_shape_arbitrary\". The shapes is defined by the coordinates as following. Example 1: A model with corner. FDwave_model_build_init('rheology','Elastic','nx',400,'nz',200,'dx',5,'dz',5) FDwave_model_plot('wfp',wfp) CVec={[1,200],[200,200],[200,100],[1,100]}; FDwave_model_build_shape_arbitrary('coordinates',CVec,'Vp',2500,'Vs',2000,'Density',1600); model_plot('wfp',wfp) Example 1: A model with dipping layers with a wedge. FDwave_model_build_init('rheo','Elastic','nx',400,'dx',5,'vp',2000, 'vs',1800,'Density',1600) % insert: a wedge CVec={[200,200],[400,200],[400,300],[300,300],[200,200]}; FDwave_model_build_shape_arbitrary('coordinates',CVec,'vp',2800,'vs',2200,'Density',2000,'plotON','y'); % insert: a dipping layer CVec={[1,250],[400,300],[400,400],[200,400],[1,300],[1,250]}; FDwave_model_build_shape_arbitrary('coordinates',CVec,'vp',2500,'vs',1900,'Density',1700,'plotON','y'); % insert: fill rest of part, a triangel CVec={[1,300],[200,400],[1,400],[1,300]}; FDwave_model_build_shape_arbitrary('coordinates',CVec,'vp',3100,'vs',2500,'Density',2100,'plotON','y'); Derived model","title":"Models"},{"location":"models.html#models","text":"","title":"Models"},{"location":"models.html#generating-the-models","text":"There are various inbuild capabilities to generate the models, viz. Simple layerd model Reading from segy model Drawing an arbitrary model Previously saved models Note: Different rheologies have different requirements therefore it is mandatory to provide the respective parameters. A concise list is provided following. Rheology Requirement scalar VP acoustic VP, RHO elastic VP, VS, RHO viscoacoustic VP, RHO, QP viscoelastic VP, VS, RHO, QP, QS","title":"Generating the models"},{"location":"models.html#simple-layered-model","text":"The function \"FDWAVE_MODEL_LAYERS\" can create a model consisting of 'n' horizontal layers. Complete Syntax| FDwave_model_layers('WFP',path,'WAVE_TYPE',options,'DX',value,'DZ',value,'THICKNESS',value,'HV_RATIO',value,'VP',value,'VS',value,'RHO',value,'QP',value,'QS',value,'PlotON',option ) Description of parameters| Parameter Type Description WFP str Path to working folder RHEOLOGY/RHEO str Type of rheology used DX, DZ num Grid size in horizontal and vertical direction in meters HV_RATIO/HVR num To determine length along horizontal axis, X=HVR*Y. THICKNESS num,array Thickness of each layer in form of vector VP, VS num,array Velocity of P and S wave in form of vector RHO num,array Density of medium in form of vector QP, QS num,array Attenutation of P and S value in form of vector PlotON str 'y'/'n' for plotting VERBOSE str 'y'/'n' for verbose mode on. Example 1 : Homogenous layer model for different rheologies thick = 500 ; vp = 2500 ; vs = 2000 ; rho= 1900 ; qp = 80 ; qs = 50 ; FDwave_model_layers('WFP',wf_path,'Rheo','scalar','DX',5,'DZ',5,'THICKNESS',thick,... 'HV_RATIO',1,'VP',vp,'VS',vs,'RHO',rho,'PlotON','y'); FDwave_model_layers('WFP',wf_path,'Rheo','acoustic','DX',5,'DZ',5,'THICKNESS',thick,... 'HV_RATIO',1,'VP',vp,'VS',vs,'RHO',rho,'PlotON','y'); FDwave_model_layers('WFP',wf_path,'Rheo','Elastic','DX',5,'DZ',5,'THICKNESS',thick,... 'HV_RATIO',1,'VP',vp,'VS',vs,'RHO',rho,'PlotON','y'); FDwave_model_layers('WFP',wf_path,'Rheo','ViscoAcoustic','DX',5,'DZ',5,'THICKNESS',thick,... 'HV_RATIO',1,'VP',vp,'RHO',rho,'Qp',qp,'PlotON','y'); FDwave_model_layers('WFP',wf_path,'Rheo','ViscoElastic','DX',5,'DZ',5,'THICKNESS',thick,... 'HV_RATIO',1,'VP',vp,'VS',vs,'RHO',rho,'Qp',qp,'Qs',qs,'PlotON','y'); Example 2 : Layered model for different Rheologies. Nlayer=10; thick = round(100*rand(1,Nlayer),0); vp = 1500 + round(500*rand(1,Nlayer),0); vs = 1300 + round(300*rand(1,Nlayer),0); rho= 1100 + round(100*rand(1,Nlayer),0); qp = 80 + round(20*rand(1,Nlayer),0); qs = 50 + round(20*rand(1,Nlayer),0); FDwave_model_layers('WFP',wf_path,'Rheo','scalar','DX',5,'DZ',5,'THICKNESS',thick,... 'HV_RATIO',1,'VP',vp,'VS',vs,'RHO',rho,'PlotON','y'); FDwave_model_layers('WFP',wf_path,'Rheo','acoustic','DX',5,'DZ',5,'THICKNESS',thick,... 'HV_RATIO',1,'VP',vp,'VS',vs,'RHO',rho,'PlotON','y'); FDwave_model_layers('WFP',wf_path,'Rheo','Elastic','DX',5,'DZ',5,'THICKNESS',thick,... 'HV_RATIO',1,'VP',vp,'VS',vs,'RHO',rho,'PlotON','y'); FDwave_model_layers('WFP',wf_path,'Rheo','ViscoAcoustic','DX',5,'DZ',5,'THICKNESS',thick,... 'HV_RATIO',1,'VP',vp,'RHO',rho,'Qp',qp,'PlotON','y'); FDwave_model_layers('WFP',wf_path,'Rheo','ViscoElastic','DX',5,'DZ',5,'THICKNESS',thick,... 'HV_RATIO',1,'VP',vp,'VS',vs,'RHO',rho,'Qp',qp,'Qs',qs,'PlotON','y'); Example 3 : Internally saved model (Ref.KLR) FDwave_model_killari ( wf_path , 'el' )","title":"Simple Layered Model"},{"location":"models.html#reading-through-the-segy-file","text":"The function \"FDwave_MODEL_READ_SEGY\" is used to load the models provided in segy file format. Syntax: model_read_segy ( 'WFP' , path , 'M_NAME' , name , 'Rheology' , options , 'CROP' , [ X1 , Z1 , X2 , Z2 ], 'GRID_SIZE_OLD' ,[ dx , dz ], 'GRID_SIZE_NEW' ,[ dx , dz ], 'PlotON' , option ) Parameter Type Description WFP str Path to working folder M_NAME str Name of the model (string) Rheology/Rheo str Options are- scalar, acoustic, elastic, viscoacoustic, viscoelastic CROP [float,float,float,float,] [X1,Z1, X2,Z2], Select the region using left upper (X1,Z1) and right lower (X2,Z2) coordinates GRID_SIZE_OLD [float,float,] [dx,dz] GRID_SIZE_NEW [float,float,] [dx,dz] PlotON str 'y'/'n' Example: Here we have used the Marmousi model which is provided in segyfile format on a fine scaled, i.e., dx=dz=1.5m. This functin also provides option to CROP and INTERPOLATE model to a coarse/finer model FDwave_model_readsegy ( 'WAVE_TYPE' , 'elastic' , 'CROP_MODEL' ,[ 7000 , 600 , 15000 , 4200 ], ... 'GRID_SIZE_OLD' ,[ 1.5 , 1.5 ], 'GRID_SIZE_NEW' ,[ 12.5 , 12.5 ], 'PlotON' , 'y' )","title":"Reading through the SEGY file"},{"location":"models.html#building-a-model-by-inserting-arbitrary-shapes","text":"This part is still in developement phase. This model primarily uses two commands: first is for initializing the model \"FDwave_model_build_init\", and the second is to insert the shapes \"FDwave_model_build_shape_arbitrary\". The shapes is defined by the coordinates as following. Example 1: A model with corner. FDwave_model_build_init('rheology','Elastic','nx',400,'nz',200,'dx',5,'dz',5) FDwave_model_plot('wfp',wfp) CVec={[1,200],[200,200],[200,100],[1,100]}; FDwave_model_build_shape_arbitrary('coordinates',CVec,'Vp',2500,'Vs',2000,'Density',1600); model_plot('wfp',wfp) Example 1: A model with dipping layers with a wedge. FDwave_model_build_init('rheo','Elastic','nx',400,'dx',5,'vp',2000, 'vs',1800,'Density',1600) % insert: a wedge CVec={[200,200],[400,200],[400,300],[300,300],[200,200]}; FDwave_model_build_shape_arbitrary('coordinates',CVec,'vp',2800,'vs',2200,'Density',2000,'plotON','y'); % insert: a dipping layer CVec={[1,250],[400,300],[400,400],[200,400],[1,300],[1,250]}; FDwave_model_build_shape_arbitrary('coordinates',CVec,'vp',2500,'vs',1900,'Density',1700,'plotON','y'); % insert: fill rest of part, a triangel CVec={[1,300],[200,400],[1,400],[1,300]}; FDwave_model_build_shape_arbitrary('coordinates',CVec,'vp',3100,'vs',2500,'Density',2100,'plotON','y');","title":"Building a model by inserting arbitrary shapes."},{"location":"models.html#derived-model","text":"","title":"Derived model"},{"location":"sources.html","text":"Source Type of sources available are Gausssian Ricker wavelet","title":"Source"},{"location":"sources.html#source","text":"Type of sources available are Gausssian Ricker wavelet","title":"Source"}]}